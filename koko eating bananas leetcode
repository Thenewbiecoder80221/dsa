class Solution {
public:
    int max_element(vector<int>&v){
        int maxi=INT_MIN;
        int n=v.size();
        for(int i=0;i<n;i++){
            maxi=max(maxi,v[i]);

        }
        return maxi;
    }
    long long  total_hours(vector<int>&v,int k){
        int n=v.size();
    long long totalhours=0;
        for(int i=0;i<n;i++){
            totalhours=totalhours+ceil((double)v[i]/(double)k);
        }
        return totalhours;
    }
    int minEatingSpeed(vector<int>& piles, int h) {
        int low,high;
        low=1;
        high=max_element( piles);
        int mid;
        while(low<=high){

        
        mid=low+(high-low)/2;
        if(total_hours(piles,mid)<=h){
            high=mid-1;

        }
        else{
            low=mid+1;
        }
    }
    return low;
    }
};
