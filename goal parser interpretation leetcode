class Solution {
public:
    string interpret(string command) {
        string result; // To store the interpreted command
        for (int i = 0; i < command.size(); i++) {
            if (command[i] == 'G') {
                result += 'G'; // Directly append 'G' to result
            } else if (command[i] == '(' && command[i + 1] == ')') {
                result += 'o'; // Append 'o' for "()"
                i++; // Skip the next character as it's part of "()"
            } else if (command[i] == '(' && command[i + 1] == 'a') {
                result += "al"; // Append "al" for "(al)"
                i += 3; // Skip the next three characters as they're part of "(al)"
            }
        }
        return result;
    }
};
