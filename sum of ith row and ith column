//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int sumOfRowCol(int N, int M, vector<vector<int>> A) {
        
        
        
       
    // Find the minimum dimension to check
        int limit = min(N, M);

        for (int i = 0; i < limit; i++) {
        // Calculate the sum of the ith row
            int rowSum = 0;
            for (int j = 0; j < M; j++) {
                rowSum += A[i][j];
        }

        // Calculate the sum of the ith column
            int colSum = 0;
            for (int j = 0; j < N; j++) {
                colSum += A[j][i];
        }

        // Check if row sum is equal to column sum
            if (rowSum != colSum) {
                return 0; // Mismatch found
        }
    }

        return 1; // All sums match
}};






//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M;
        cin >> N >> M;
        vector<vector<int>> A(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> A[i][j];
        Solution ob;
        cout << ob.sumOfRowCol(N, M, A) << "\n";
    
cout << "~" << "\n";
}
}
// } Driver Code Ends
